{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sayat\\\\freelancer-portfolio\\\\src\\\\pages\\\\Projects.js\",\n  _s = $RefreshSig$();\nimport Project from \"../components/Project\";\nimport { projects } from \"../helpers/ProjectList\";\nimport { useState } from \"react\";\nimport Pagination from \"../components/Pagination\";\nimport { Routes, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Projects() {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [projectPerPage] = useState(3);\n  const lastProjectIndex = currentPage * projectPerPage;\n  const firstProjectIndex = lastProjectIndex - projectPerPage;\n  const currentProject = projects.slice(firstProjectIndex, lastProjectIndex);\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"title-1\",\n          children: \"Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"projects\",\n          children: currentProject.map(project => /*#__PURE__*/_jsxDEV(Project, {\n            title: project.title,\n            img: project.img,\n            id: project.id\n          }, project.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            path: \"page\",\n            element: /*#__PURE__*/_jsxDEV(Pagination, {\n              projectPerPage: projectPerPage,\n              totalProjects: projects.length,\n              paginate: paginate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 13\n  }, this);\n}\n_s(Projects, \"MGLyHQ4srVRBqz4pZMjfgEiQJsE=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["Project","projects","useState","Pagination","Routes","Route","Projects","currentPage","setCurrentPage","projectPerPage","lastProjectIndex","firstProjectIndex","currentProject","slice","paginate","pageNumber","map","project","title","img","id","length"],"sources":["C:/Users/Sayat/freelancer-portfolio/src/pages/Projects.js"],"sourcesContent":["import Project from \"../components/Project\";\r\nimport {projects} from \"../helpers/ProjectList\";\r\nimport {useState} from \"react\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport { Routes, Route,} from 'react-router-dom';\r\n\r\nfunction Projects() {\r\n\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [projectPerPage] = useState(3)\r\n    const lastProjectIndex = currentPage * projectPerPage\r\n    const firstProjectIndex = lastProjectIndex - projectPerPage\r\n    const currentProject = projects.slice(firstProjectIndex, lastProjectIndex)\r\n\r\n\r\n    const paginate = (pageNumber) => {\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n    return (<div>\r\n        <main className=\"section\">\r\n            <div className=\"container\">\r\n                <h2 className=\"title-1\">Projects</h2>\r\n                <ul className=\"projects\">\r\n\r\n                    {currentProject.map((project) => (\r\n                        <Project key={project.id} title={project.title} img={project.img} id={project.id}/>))}\r\n\r\n\r\n                </ul>\r\n<Routes>\r\n    <Route path=\"page\" element={<Pagination projectPerPage={projectPerPage} totalProjects={projects.length} paginate={paginate}/>}/>\r\n</Routes>\r\n\r\n\r\n            </div>\r\n        </main>\r\n    </div>);\r\n}\r\n\r\nexport default Projects;"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,uBAAuB;AAC3C,SAAQC,QAAQ,QAAO,wBAAwB;AAC/C,SAAQC,QAAQ,QAAO,OAAO;AAC9B,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAAC;AAEjD,SAASC,QAAQ,GAAG;EAAA;EAEhB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACO,cAAc,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACpC,MAAMQ,gBAAgB,GAAGH,WAAW,GAAGE,cAAc;EACrD,MAAME,iBAAiB,GAAGD,gBAAgB,GAAGD,cAAc;EAC3D,MAAMG,cAAc,GAAGX,QAAQ,CAACY,KAAK,CAACF,iBAAiB,EAAED,gBAAgB,CAAC;EAG1E,MAAMI,QAAQ,GAAIC,UAAU,IAAK;IAC7BP,cAAc,CAACO,UAAU,CAAC;EAC9B,CAAC;EAED,oBAAQ;IAAA,uBACJ;MAAM,SAAS,EAAC,SAAS;MAAA,uBACrB;QAAK,SAAS,EAAC,WAAW;QAAA,wBACtB;UAAI,SAAS,EAAC,SAAS;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAc,eACrC;UAAI,SAAS,EAAC,UAAU;UAAA,UAEnBH,cAAc,CAACI,GAAG,CAAEC,OAAO,iBACxB,QAAC,OAAO;YAAkB,KAAK,EAAEA,OAAO,CAACC,KAAM;YAAC,GAAG,EAAED,OAAO,CAACE,GAAI;YAAC,EAAE,EAAEF,OAAO,CAACG;UAAG,GAAnEH,OAAO,CAACG,EAAE;YAAA;YAAA;YAAA;UAAA,QAA4D;QAAC;UAAA;UAAA;UAAA;QAAA,QAGxF,eACrB,QAAC,MAAM;UAAA,uBACH,QAAC,KAAK;YAAC,IAAI,EAAC,MAAM;YAAC,OAAO,eAAE,QAAC,UAAU;cAAC,cAAc,EAAEX,cAAe;cAAC,aAAa,EAAER,QAAQ,CAACoB,MAAO;cAAC,QAAQ,EAAEP;YAAS;cAAA;cAAA;cAAA;YAAA;UAAG;YAAA;YAAA;YAAA;UAAA;QAAE;UAAA;UAAA;UAAA;QAAA,QAC3H;MAAA;QAAA;QAAA;QAAA;MAAA;IAGS;MAAA;MAAA;MAAA;IAAA;EACH;IAAA;IAAA;IAAA;EAAA,QACL;AACV;AAAC,GAhCQR,QAAQ;AAAA,KAARA,QAAQ;AAkCjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}